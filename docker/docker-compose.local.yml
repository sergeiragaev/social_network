services:
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    restart: always
    environment:
      - POSTGRES_DB=global_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - database-data:/var/lib/postgresql/data/

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/root/redis
    environment:
      - REDIS_PORT=6379
      - REDIS_DATABASES=1

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    restart: on-failure

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - kafka:/data
    restart: on-failure

  grafana:
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      monitoring:
        aliases:
          - grafana
    restart: on-failure
    user: "0"

  prometheus:
    image: prom/prometheus
    ports:
      - 3001:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    networks:
      monitoring:
        aliases:
          - prometheus
    restart: on-failure

  frontend:
    image: ragaev/frontend:local
    ports:
      - "80:80"
    tty: true
    restart: on-failure
    volumes:
      - ./nginx-config.local:/etc/nginx/conf.d

volumes:
  kafka:
  database-data:
networks:
  monitoring:
